<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Statistics - solveMyProblem</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/css/styles.css">
    <link rel="stylesheet" href="/assets/css/footer.css">
    <link rel="stylesheet" href="/assets/css/header.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script> <!-- Include Chart.js CDN -->
    <style>
        #main-div {
            padding-top: 120px;
            padding-bottom: 100px;
        }
        table {
            width: 100%;
            border-collapse: collapse;
        }
        th, td {
            border: 1px solid #ccc;
            padding: 8px;
            text-align: center;
        }
        th {
            background-color: #f5f5f5;
        }
        .status-ready {
            color: green;
            font-weight: bold;
        }
        .status-not-ready {
            color: red;
            font-weight: bold;
        }
        .status-executed {
            color: blue;
            font-weight: bold;
        }
        .pagination-container {
            margin-top: 20px;
            display: flex;
            justify-content: center;
        }
        /* Set the pie chart size and float to the right */
        #executionChart {
            max-width: 300px; /* Set a smaller width for the pie chart */
            float: right;
            margin-right: 50px; /* Add some spacing on the right side */
        }
        .table-container {
            max-width: 400px; /* Set a smaller width for the table */
            margin-left: 50px; /* Add some spacing on the left side */
        }
    </style>
</head>
<body>

<!-- Header with logo and system info -->
<header>
    <div class="container d-flex justify-content-between align-items-center">
        <img id="small_logo" src="/assets/img/small_logo.png" alt="solveME logo" class="img-fluid">
        <p id="system-info">System info: <span id="date-time"></span>, Health: <span id="system-health">Checking...</span></p>
    </div>
</header>

<div id="main-div" class="container">
    <!-- Statistics Display -->
    <% if (stats) { %>
        <div class="row mb-4">
            <!-- Table Container -->
            <div class="col-md-6 table-container">
                <table class="table table-striped">
                    <thead>
                    <tr>
                        <th scope="col">Statistic</th>
                        <th scope="col">Value</th>
                    </tr>
                    </thead>
                    <tbody>
                    <tr>
                        <td>Total Executions</td>
                        <td><%= stats.totalExecutions %></td>
                    </tr>
                    <tr>
                        <td>Completed Executions</td>
                        <td><%= stats.completedExecutions %></td>
                    </tr>
                    <tr>
                        <td>Failed Executions</td>
                        <td><%= stats.failedExecutions %></td>
                    </tr>
                    <tr>
                        <td>Success Rate</td>
                        <td><%= stats.successRate %> %</td>
                    </tr>
                    <tr>
                        <td>Average Execution Time</td>
                        <td><%= stats.averageExecutionTime.toFixed(2) %> ms</td>
                    </tr>
                    </tbody>
                </table>
            </div>

            <!-- Pie Chart Container -->
            <div class="col-md-6">
                <canvas id="executionChart"></canvas>
            </div>
        </div>

        <script>
            // Get the statistics data from the server-side rendering (EJS templating)
            const stats = JSON.parse('<%- JSON.stringify(stats) %>');

            const totalExecutions = stats.totalExecutions;
            const completedExecutions = stats.completedExecutions;
            const failedExecutions = stats.failedExecutions;

            const ctx = document.getElementById('executionChart').getContext('2d');
            const executionChart = new Chart(ctx, {
                type: 'pie', // Change this to 'doughnut' if you prefer a doughnut chart
                data: {
                    labels: ['Completed Executions', 'Failed Executions'],
                    datasets: [{
                        label: 'Execution Stats',
                        data: [completedExecutions, failedExecutions],
                        backgroundColor: [
                            'rgba(75, 192, 192, 0.6)', // Color for Completed Executions
                            'rgba(255, 99, 132, 0.6)', // Color for Failed Executions
                        ],
                        borderColor: [
                            'rgba(75, 192, 192, 1)',
                            'rgba(255, 99, 132, 1)',
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            display: true,
                            position: 'top'
                        }
                    }
                }
            });
        </script>

    <% } else { %>
        <div class="alert alert-warning" role="alert">
            No statistics available.
        </div>
    <% } %>
</div>

<!-- Footer -->
<footer class="footer-basic">
    <div class="container text-center">
        <ul class="list-inline">
            <li class="list-inline-item"><a href="/">Home</a></li>
            <li class="list-inline-item"><a href="/credits/">Credits</a></li>
            <li class="list-inline-item"><a href="/problems/">Submit</a></li>
            <li class="list-inline-item"><a href="/problems/show">Submissions</a></li>
        </ul>
        <p class="copyright">Company Name Â© 2021</p>
    </div>
</footer>

<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
    // Function to format and display current date and time
    function updateDateTime() {
        const dateTimeElement = document.getElementById('date-time');
        const now = new Date();
        const formattedTime = now.toLocaleString();  // Localized date and time string
        dateTimeElement.textContent = formattedTime;
    }

    // Update date and time every second
    setInterval(updateDateTime, 1000);
    updateDateTime();  // Call immediately to set on load

    // Optionally, system health data can be fetched from backend (e.g., CPU/Memory usage)
    async function fetchSystemHealth() {
        try {
            const response = await fetch('/system/health');
            const data = await response.json();
            document.getElementById('system-health').textContent = data.healthStatus;
        } catch (error) {
            document.getElementById('system-health').textContent = 'Unavailable';
        }
    }

    // Fetch system health on page load
    fetchSystemHealth();
</script>

</body>
</html>
